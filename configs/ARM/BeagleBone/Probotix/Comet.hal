# configuration for 3-axis gantry router with tandem motors on the y-axis
# also supports a Logitech F310 Gamepad as a jog pendant if loaded by custom_postgui.hal

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.sh

loadrt trivkins
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD traj_period_nsec=[EMCMOT]SERVO_PERIOD key=[EMCMOT]SHMEM_KEY num_joints=[TRAJ]AXES tp=tp kins=trivkins
#loadrt probe_parport
#loadrt hal_parport cfg=0x378
#setp parport.0.reset-time 5000
#loadrt stepgen step_type=0,0,0
# newthread fast 50000
# newthread slow 1000000

loadrt hal_bb_gpio output_pins=113,116 input_pins=108,114,115,117,118
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
#loadrt gantry count=1 personality=2
newinst gantry gantry.0 pincount=2

addf hpg.capture-position                 servo-thread
addf bb_gpio.read                         servo-thread
addf gantry.0.read                        servo-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
addf gantry.0.write                       servo-thread
addf hpg.update                           servo-thread
addf bb_gpio.write                        servo-thread


# setup GPIO polarity
setp bb_gpio.p8.in-08.invert 0
setp bb_gpio.p8.in-14.invert 0
setp bb_gpio.p8.in-15.invert 1
setp bb_gpio.p8.in-17.invert 0
setp bb_gpio.p8.in-18.invert 0


# set up the axis parameters and create the axis signals

# x-axis
setp hpg.stepgen.00.position-scale [AXIS_0]SCALE
setp hpg.stepgen.00.steplen 2000
setp hpg.stepgen.00.stepspace 2000
setp hpg.stepgen.00.dirhold 35000
setp hpg.stepgen.00.dirsetup 35000
setp hpg.stepgen.00.maxaccel [AXIS_0]STEPGEN_MAXACCEL
#setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
net xpos-cmd axis.0.motor-pos-cmd => hpg.stepgen.00.position-cmd
net xpos-fb hpg.stepgen.00.position-fb => axis.0.motor-pos-fb
net xenable axis.0.amp-enable-out => hpg.stepgen.00.enable

setp hpg.stepgen.00.steppin         142
setp hpg.stepgen.00.dirpin          143

# y-axis gantry
net y1pos-cmd gantry.0.joint.00.pos-cmd => hpg.stepgen.01.position-cmd
net y1pos-fb  gantry.0.joint.00.pos-fb  <= hpg.stepgen.01.position-fb
net y2pos-cmd gantry.0.joint.01.pos-cmd => hpg.stepgen.02.position-cmd
net y2pos-fb  gantry.0.joint.01.pos-fb  <= hpg.stepgen.02.position-fb
net ypos-cmd  gantry.0.position-cmd     <= axis.1.motor-pos-cmd
net ypos-fb   gantry.0.position-fb      => axis.1.motor-pos-fb
net yenable axis.1.amp-enable-out => hpg.stepgen.01.enable hpg.stepgen.02.enable
setp gantry.0.search-vel [AXIS_1]HOME_SEARCH_VEL

# y1-axis
setp hpg.stepgen.01.position-scale [AXIS_1]SCALE
setp hpg.stepgen.01.steplen 2000
setp hpg.stepgen.01.stepspace 2000
setp hpg.stepgen.01.dirhold 35000
setp hpg.stepgen.01.dirsetup 35000
setp hpg.stepgen.01.maxaccel [AXIS_1]STEPGEN_MAXACCEL

setp hpg.stepgen.01.steppin         144
setp hpg.stepgen.01.dirpin          145

# y2-axis
setp hpg.stepgen.02.position-scale [AXIS_1]SCALE
setp hpg.stepgen.02.steplen 2000
setp hpg.stepgen.02.stepspace 2000
setp hpg.stepgen.02.dirhold 35000
setp hpg.stepgen.02.dirsetup 35000
setp hpg.stepgen.02.maxaccel [AXIS_1]STEPGEN_MAXACCEL

setp hpg.stepgen.02.steppin         52
setp hpg.stepgen.02.dirpin          147

# z-axis
setp hpg.stepgen.03.position-scale [AXIS_2]SCALE
setp hpg.stepgen.03.steplen 2000
setp hpg.stepgen.03.stepspace 2000
setp hpg.stepgen.03.dirhold 35000
setp hpg.stepgen.03.dirsetup 35000
setp hpg.stepgen.03.maxaccel [AXIS_2]STEPGEN_MAXACCEL
net zpos-cmd axis.2.motor-pos-cmd => hpg.stepgen.03.position-cmd
net zpos-fb hpg.stepgen.03.position-fb => axis.2.motor-pos-fb
net zenable axis.2.amp-enable-out => hpg.stepgen.03.enable

setp hpg.stepgen.03.steppin         39
setp hpg.stepgen.03.dirpin          149


# debounce the y-axis switches and connect them to signals
net switches-y1 	<= bb_gpio.p8.in-08
net switches-y2 	<= bb_gpio.p8.in-14

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-y1		=> gantry.0.joint.00.home
net switches-y2		=> gantry.0.joint.01.home
net home-y 		<= gantry.0.home
net home-y 		=> axis.1.home-sw-in
net limit-y		<= gantry.0.limit
net limit-y		=> axis.1.neg-lim-sw-in

# set up the other home and limit switches
net switches-x 		<= bb_gpio.p8.in-18
net switches-x 		=> axis.0.home-sw-in
net switches-x		=> axis.0.neg-lim-sw-in
net switches-x		=> axis.0.pos-lim-sw-in

net switches-z 		<= bb_gpio.p8.in-17
net switches-z 		=> axis.2.home-sw-in
net switches-z		=> axis.2.pos-lim-sw-in

# connect the spindle control to the relay pin
net spindle-cw => bb_gpio.p8.out-16
net spindle-cw <= motion.spindle-forward

# connect the shop vac to the flood coolant signal
net flood => iocontrol.0.coolant-flood
net flood => bb_gpio.p8.out-13

# set up the e-stop switch
net estop-ext <= bb_gpio.p8.in-15
net estop-ext => iocontrol.0.emc-enable-in



#net estop-out <= iocontrol.0.user-enable-out
#net estop-out => iocontrol.0.emc-enable-in

net estop-out <= iocontrol.0.user-enable-out


loadusr -W hal_manualtoolchange
net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
