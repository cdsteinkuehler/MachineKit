# #######################################
#
# HAL file for BeagleBone + BeBoPr cape with 4 steppers
#
# Derived from example hm2-stepper config
#
# ########################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.sh

# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

# load low-level drivers
loadrt hal_bb_gpio output_pins= input_pins=923,925,916,918,911,913
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
loadrt pid count=2
loadrt limit1 count=2
loadrt mux2 count=2
loadrt and2 count=2
loadrt wcomp count=2

# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# c = analog input channel and thermistor table
loadusr -Wn Therm ./hal_temp_bbb -n Therm -c 04:epcos_B57560G1104,06:epcos_B57560G1104 -b Replicape
loadusr -Wn Pwm ./hal_pwm_replicape -n Pwm
loadusr -Wn HwConfig ./hal_hwconfig_replicape -n HwConfig

# ################################################
# THREADS
# ################################################

addf hpg.capture-position   servo-thread
addf bb_gpio.read           servo-thread
addf bb_gpio.write          servo-thread
addf motion-command-handler servo-thread
addf motion-controller      servo-thread
addf pid.0.do-pid-calcs     servo-thread
addf pid.1.do-pid-calcs     servo-thread
addf limit1.0               servo-thread
addf limit1.1               servo-thread
addf hpg.update             servo-thread
addf mux2.0                 servo-thread
addf mux2.1                 servo-thread
addf and2.0                 servo-thread
addf and2.1                 servo-thread
addf wcomp.0                servo-thread
addf wcomp.1                servo-thread

# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################

# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

setp hpg.stepgen.00.steppin        817
setp hpg.stepgen.00.dirpin         826


# ################
# Y [1] Axis
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out
net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

setp hpg.stepgen.01.steppin        812
setp hpg.stepgen.01.dirpin         819


# ################
# Z [2] Axis
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out
net emcmot.02.enable => hpg.stepgen.02.enable


# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

setp hpg.stepgen.02.steppin        813
setp hpg.stepgen.02.dirpin         814


# ################
# A [3] Axis (Extruder)
# ################

# axis enable chain
newsig emcmot.03.enable bit
sets emcmot.03.enable FALSE

net emcmot.03.enable <= axis.3.amp-enable-out
net emcmot.03.enable => hpg.stepgen.03.enable


# position command and feedback
net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd

net motor.03.pos-fb <= hpg.stepgen.03.position-fb
net motor.03.pos-fb => axis.3.motor-pos-fb


# timing parameters
setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD

setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE

setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE

setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

setp hpg.stepgen.03.steppin        912
setp hpg.stepgen.03.dirpin         815


# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# Create estop signal chain
# Drive software estop to hardware
#net estop-out iocontrol.0.user-enable-out => bb_gpio.p8.out-26
#setp bb_gpio.p8.out-26.invert 1

# Monitor estop input from hardware
#net estop-loop bb_gpio.p8.in-17 => iocontrol.0.emc-enable-in
#setp bb_gpio.p8.in-17.invert 1
net estop-loop <= Therm.no-error => iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Axis enable signal (active low)
#net emcmot.00.enable => bb_gpio.p9.out-14
#setp bb_gpio.p9.out-14.invert 1

# Machine power
net main_enable <= halui.machine.is-on => HwConfig.enable => Pwm.enable

# Microstepping and Mode
# value = 1/2^value. e.g. 5 means 1/32 microstepping.
setp HwConfig.stepper.0.microstepping 5
setp HwConfig.stepper.1.microstepping 5
setp HwConfig.stepper.2.microstepping 5
setp HwConfig.stepper.3.microstepping 5
setp HwConfig.stepper.0.current 2
setp HwConfig.stepper.1.current 2
setp HwConfig.stepper.2.current 1
setp HwConfig.stepper.3.current 1.5


# ################
# Limit Switches
# ################
newsig limit-x-min bit
newsig limit-x-max bit
newsig limit-y-min bit
newsig limit-y-max bit
newsig limit-z-min bit
newsig limit-z-max bit

net limit-x-min <= bb_gpio.p9.in-25
net limit-x-max <= bb_gpio.p9.in-11
net limit-y-min <= bb_gpio.p9.in-23
net limit-y-max <= bb_gpio.p9.in-16
net limit-z-min <= bb_gpio.p9.in-13
net limit-z-max <= bb_gpio.p9.in-18

# Adjust as needed for your switch polarity
# setp bb_gpio.p8.in-08.invert 0

# Uncomment if you actually have limit switches setup
# You probably want to setup homing in the INI file, as well
net limit-x-min => axis.0.home-sw-in
net limit-x-min => axis.0.neg-lim-sw-in
#net limit-x-max => axis.0.pos-lim-sw-in
net limit-y-max => axis.1.home-sw-in
#net limit-y-min => axis.1.neg-lim-sw-in
net limit-y-max => axis.1.pos-lim-sw-in
net limit-z-max => axis.2.home-sw-in
#net limit-z-min => axis.2.neg-lim-sw-in
net limit-z-max => axis.2.pos-lim-sw-in

# ##################################################
# PWM and Temperature Signals
# ##################################################

# Define signals to use elsewhere (ie: M1xx codes)
# If you change any names here, lots of things will break!
newsig e0.temp.set   float
newsig e0.temp.meas  float
newsig bed.temp.set  float
newsig bed.temp.meas float

# PID for Extruder 0 temperature control
net e0.temp.meas    <= Therm.ch-04.value
net e0.temp.meas    => pid.0.feedback => wcomp.0.in

setp wcomp.0.min -100
setp wcomp.0.max 250 # Maximum temperature limit
net main_enable     => and2.0.in0
net e0.safe         <= wcomp.0.out => and2.0.in1
net e0.pid-en       <= and2.0.out => pid.0.enable

sets e0.temp.set  0
net e0.temp.set => mux2.0.in0
net e0.temp.set-actual <= mux2.0.out => pid.0.command

net e0.heater  <= pid.0.output
net e0.heater  => limit1.0.in
net e0.heaterl <= limit1.0.out
net e0.heaterl => Pwm.5.out
net e0.on      <= Pwm.5.on

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.0.min 0

# PID for Bed temperature control
net bed.temp.meas    <= Therm.ch-06.value
net bed.temp.meas    => pid.1.feedback => wcomp.1.in

setp wcomp.1.min -100
setp wcomp.1.max 150 # Maximum temperature limit
net main_enable     => and2.1.in0
net bed.safe        <= wcomp.1.out => and2.1.in1
net bed.pid-en      <= and2.1.out => pid.1.enable

sets bed.temp.set  0
net bed.temp.set => mux2.1.in0
net bed.temp.set-actual <= mux2.1.out => pid.1.command

net bed.heater  <= pid.1.output
net bed.heater  => limit1.1.in
net bed.heaterl <= limit1.1.out
net bed.heaterl => Pwm.4.out
net bed.on      <= Pwm.4.on

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.1.min 0

# PID Parameters for adjusting temperature control
# Extruder
#setp pid.0.FF0      0
#setp pid.0.FF1      0
#setp pid.0.FF2      0
setp pid.0.Pgain  0.11381434
setp pid.0.Igain  0.00140295027788
setp pid.0.Dgain  2.30829711
setp pid.0.maxoutput 1.0

# Bed
#setp pid.1.FF0      0
#setp pid.1.FF1      0
#setp pid.1.FF2      0
setp pid.1.Pgain  0.05367
setp pid.1.Igain  0.001875
setp pid.1.Dgain  0.3879
setp pid.1.maxoutput 1.0
