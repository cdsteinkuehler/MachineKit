STEPCONF_MODULES = pages build_INI build_HAL

PYTARGETS += ../bin/stepconf  ../lib/python/stepconf/__init__.py ../share/linuxcnc/machinekit-wizard.gif $(patsubst %,../lib/python/stepconf/%.py,$(STEPCONF_MODULES)) \
	../share/linuxcnc/stepconf/main_page.glade \
	../share/linuxcnc/stepconf/base.glade \
	../share/linuxcnc/stepconf/start.glade \
	../share/linuxcnc/stepconf/pport1.glade \
	../share/linuxcnc/stepconf/pport2.glade \
	../share/linuxcnc/stepconf/spindle.glade \
	../share/linuxcnc/stepconf/options.glade \
	../share/linuxcnc/stepconf/axisx.glade \
	../share/linuxcnc/stepconf/axisy.glade \
	../share/linuxcnc/stepconf/axisz.glade \
	../share/linuxcnc/stepconf/axisa.glade \
	../share/linuxcnc/stepconf/finished.glade

PYI18NSRCS += emc/usr_intf/stepconf/stepconf.py $(patsubst %,emc/usr_intf/stepconf/%.py,$(STEPCONF_MODULES)) \
	emc/usr_intf/stepconf/main_page.glade \
	emc/usr_intf/stepconf/base.glade \
	emc/usr_intf/stepconf/start.glade \
	emc/usr_intf/stepconf/pport1.glade \
	emc/usr_intf/stepconf/pport2.glade \
	emc/usr_intf/stepconf/spindle.glade \
	emc/usr_intf/stepconf/options.glade \
	emc/usr_intf/stepconf/axisx.glade \
	emc/usr_intf/stepconf/axisy.glade \
	emc/usr_intf/stepconf/axisz.glade \
	emc/usr_intf/stepconf/axisa.glade \
	emc/usr_intf/stepconf/finished.glade

../lib/python/stepconf/__init__.py:
	$(ECHO) building python init $(notdir $@)
	@mkdir -p ../lib/python/stepconf
	@touch $@

../lib/python/stepconf/%: emc/usr_intf/stepconf/%
	@$(ECHO) Syntax checking python script $(notdir $@)
	$(Q)$(PYTHON) -c 'import sys; compile(open(sys.argv[1]).read(), sys.argv[1], "exec")' $<
	$(ECHO) Copying python script $(notdir $@)
	$(Q)mkdir -p ../lib/python/stepconf
	$(Q)cp $< $@

../share/linuxcnc/stepconf/main_page.glade: emc/usr_intf/stepconf/main_page.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/base.glade: emc/usr_intf/stepconf/base.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/start.glade: emc/usr_intf/stepconf/start.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/pport1.glade: emc/usr_intf/stepconf/pport1.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/pport2.glade: emc/usr_intf/stepconf/pport2.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/spindle.glade: emc/usr_intf/stepconf/spindle.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/options.glade: emc/usr_intf/stepconf/options.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/axisx.glade: emc/usr_intf/stepconf/axisx.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/axisy.glade: emc/usr_intf/stepconf/axisy.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/axisz.glade: emc/usr_intf/stepconf/axisz.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/axisa.glade: emc/usr_intf/stepconf/axisa.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/stepconf/finished.glade: emc/usr_intf/stepconf/finished.glade
	$(ECHO) Copying glade file $(notdir $@)
	$(Q)mkdir -p $(dir $@)
	$(Q)cp -f $< $@

../share/linuxcnc/machinekit-wizard.gif: ../machinekit-wizard.gif
	cp $< $@

../bin/stepconf: emc/usr_intf/stepconf/stepconf.py
	@$(ECHO) Syntax checking python script $(notdir $@)
	$(Q)$(PYTHON) -c 'import sys; compile(open(sys.argv[1]).read(), sys.argv[1], "exec")' $<
	$(ECHO) Copying python script $(notdir $@)
	$(Q)(echo '#!$(PYTHON)'; sed '1 { /^#!/d; }' $<) > $@.tmp && chmod +x $@.tmp && mv -f $@.tmp $@

clean: stepconf-clean
stepconf-clean:
	rm -rf ../lib/python/stepconf
