#!/bin/bash -e
#                                                         -*-shell-script-*-
# Placed into the public domain by John Morris, 2014
#
# Configure source package dependencies

# List of supported kernel arches for kthreads
KTHREAD_ARCHES="i386 amd64"

# Distro info
#
# This should run on non-Debian distros; lsb_release is only used for
# TCL/TK version detection, which can be passed in through the '-t
# VERSION' switch
if test -x /usr/bin/lsb_release; then
    DISTRO_ID=$(lsb_release -is)  # Debian or Ubuntu
    DISTRO_RELEASE=$(lsb_release -rs)   # 8.1, 14.04, etc.
fi

# Work out of the debian/ directory
cd "$(dirname $0)"

# Put command into a file so that later automatic invocations can
# re-run
echo $0 $* > configure.cmdline

rules_enable_threads() {
    # enable thread flavors in debian/rules; e.g.
    #    THREADS_POSIX = --with-posix
    FLAVOR=$1
    FLAVOR_VAR=THREADS_$(echo $FLAVOR | tr 'a-z-' 'A-Z_')
    sed -i rules \
	-e "s/^${FLAVOR_VAR}[^_].*/${FLAVOR_VAR} = --with-${FLAVOR}/"
    echo "debian/rules:  enabled ${FLAVOR} threads" >&2
}

guess_arch_from_kver() {
    # utility to make a guess at the kernel header arch from the
    # kernel version; this works for Debian kernels, and 'any' is
    # correct for the RTAI kernel packages in the Machinekit Debian
    # archive
    KVER=$1
    case $KVER in
	*-?86 | *-?86-pae) echo i386 ;;
	*-amd64) echo amd64 ;;
	*) echo any ;;  # For non-Debian kernel package naming
    esac
}

kernel_build_dep() {
    # generate Build-Depends: for kernels, restricting to a build arch
    # where applicable
    KVER=$1
    local BUILD_DEP=linux-headers-${KVER}
    if test $(guess_arch_from_kver ${KVER}) != any; then
	# Only require these headers for the corresponding ARCH
	BUILD_DEP+=" [$(guess_arch_from_kver ${KVER})]"
    fi
    echo $BUILD_DEP
    echo "debian/control:  added Build-Depends: ${BUILD_DEP}" >&2
}

rules_set_kthreads_headers() {
    # set list of kernel sources in debian/rules
    FLAVOR=$1; shift
    # do nothing if no headers found
    test -n "$*" || return 0

    # Loop through each supported kthreads arch; add any kvers that
    # look like an arch match to the appropriate kernel headers list
    for ARCH in $KTHREAD_ARCHES; do
	# construct list of kernel source directories
	local HEADERS=
	for v in $*; do
	    # skip incompatible arches
	    test "$(guess_arch_from_kver ${v})" = $ARCH -o \
		"$(guess_arch_from_kver ${v})" = any || continue
	    HEADERS+=" /usr/src/linux-headers-${v}"
	done
	# if the list is not empty, add it in debian/rules; e.g.
	# HEADERS_XENOMAI_KERNEL_i386 = \
	#     --with-xenomai-kernel-sources="/usr/src/linux-headers-<kver>"
	if test -n "$HEADERS"; then
	    echo "debian/rules:  set kernel headers for ${FLAVOR}-${ARCH}:" >&2
	    for h in ${HEADERS}; do echo "    ${h}" >&2; done
	    HEADERS="--with-${FLAVOR}-sources='${HEADERS}'"
	    HEADERS_VAR=HEADERS_$(echo $FLAVOR | tr 'a-z-' 'A-Z_')_${ARCH}
	    sed -i rules \
		-e "s@^#\(${HEADERS_VAR}\) .*@\1 = ${HEADERS}@"
	fi
    done
}

do_posix() {
    cat control.posix.in >> control
    echo "debian/control:  added POSIX threads package" >&2
    rules_enable_threads posix
    HAVE_FLAVOR=true
}

do_rt-preempt() {
    cat control.rt-preempt.in >> control
    echo "debian/control:  added RT_PREEMPT threads package" >&2
    rules_enable_threads rt-preempt
    HAVE_FLAVOR=true
}

do_xenomai() {
    # Be sure the -dev files only appear once
    BUILD_DEPS="${BUILD_DEPS/libxenomai-dev, /}libxenomai-dev, "
    cat control.xenomai.in >> control
    echo "debian/control:  added Xenomai (userland) threads package" \
	"with Build-Depends:" >&2
    echo "    libxenomai-dev" >&2
    rules_enable_threads xenomai
    HAVE_FLAVOR=true
}

do_xenomai_kernel() {
    KVER=$1
    # Be sure the -dev files only appear once
    BUILD_DEPS="${BUILD_DEPS/libxenomai-dev, /}libxenomai-dev, "
    # Headers package is conveniently named after the kver
    BUILD_DEPS+="$(kernel_build_dep ${KVER}), "
    # Add '...install' and 'control' file with substitutions
    sed machinekit-kernel.install.in \
	-e "s/@KVER@/${KVER}/" \
	-e "s/@FLAVOR@/xenomai-kernel/" \
	> machinekit-xenomai-kernel-${KVER}.install
    echo "debian/machinekit-xenomai-kernel-${KVER}.install:  added" >&2
    sed control.xenomai-kernel.in \
	-e "s/@KVER@/$KVER/g" \
	-e "s/@ARCH@/$(guess_arch_from_kver ${KVER})/g" \
	>> control
    echo "debian/control:  Added Xenomai kernel threads ${KVER}" >&2
    echo "                 with Build-Depends:" >&2
    echo "    libxenomai-dev" >&2
    rules_enable_threads xenomai-kernel
    XENOMAI_KERNEL_HEADERS+=" ${KVER}"
    HAVE_FLAVOR=true
    HAVE_KTHREADS_FLAVOR=true
}

do_rtai_kernel() {
    KVER=$1
    # Be sure the -dev files only appear once
    BUILD_DEPS="${BUILD_DEPS/librtai-dev, /}librtai-dev, "
    # Headers package is conveniently named after the kver
    BUILD_DEPS+="$(kernel_build_dep ${KVER}), "
    # Add '...install' and 'control' file with substitutions
    sed machinekit-kernel.install.in \
	-e "s/@KVER@/${KVER}/" \
	-e "s/@FLAVOR@/rtai-kernel/" \
	> machinekit-rtai-kernel-${KVER}.install
    echo "debian/machinekit-xenomai-kernel-${KVER}.install:  added" >&2
    sed control.rtai-kernel.in \
	-e "s/@KVER@/$KVER/g" \
	-e "s/@ARCH@/$(guess_arch_from_kver ${KVER})/g" \
	>> control
    echo "debian/control:  Added RTAI kernel threads ${KVER}" >&2
    echo "                 with Build-Depends:" >&2
    echo "    librtai-dev" >&2
    rules_enable_threads rtai-kernel
    RTAI_KERNEL_HEADERS+=" ${KVER}"
    HAVE_FLAVOR=true
    HAVE_KTHREADS_FLAVOR=true
}

do_tcl_tk_version() {
    TCL_TK_VER="$1"
    if test -z "$TCL_TK_VER"; then
        # No -t option specified; to ensure a reproducible package,
        # use the latest version from the distro
	TCL_TK_VER=8.6
	case "$DISTRO_ID" in
	    Debian)  test "${DISTRO_RELEASE/.*/}" -lt 8 && TCL_TK_VER=8.5 ;;
	    Raspbian)test "${DISTRO_RELEASE/.*/}" -lt 8 && TCL_TK_VER=8.5 ;;
	    Ubuntu)  test "${DISTRO_RELEASE/.*/}" -lt 14 && TCL_TK_VER=8.5 ;;
	    *)  usage "Unknown distro '${DISTRO_ID}'" ;;
	esac
    fi
    TCL_TK_BUILD_DEPS="tcl${TCL_TK_VER}-dev, tk${TCL_TK_VER}-dev"
    TCL_TK_DEPS="tcl${TCL_TK_VER}, tk${TCL_TK_VER}"
    echo "debian/control:  Set tcl/tk build deps to version $TCL_TK_VER" >&2
}

usage() {
    {
	test -z "$1" || echo "$1"
	echo "Usage:  $0 [ arg ... ]"
	echo "   arg:		function:"
	echo "   -p		build POSIX threads"
	echo "   -r		build RT_PREEMPT threads"
	echo "   -x		build Xenomai threads"
	echo "   -X <kver>	build Xenomai-kernel threads ***"
	echo "   -R <kver>	build RTAI-kernel threads ***"
	echo "   -t <tclver>	set tcl/tk version"
	echo "      *** Argument may be repeated for multiple kernels"
    } >&2
    exit 1
}
test "$1" != --help || usage

#############################################
# Main program
#
# These need to be in a certain order:
# - Base template copy first
# - do_<flavor> functions next
# - replace BUILD_DEPS and *_KERNEL_HEADERS last
#   (when lists are fully populated)

# set defaults
BUILD_DEPS=  # List of Build-Depends
DEPS= # List of Depends
HAVE_FLAVOR=false
HAVE_KTHREADS_FLAVOR=false

# delete old files
rm -f machinekit-{rtai,xenomai}-kernel-*.install

# copy base templates into place
cp control.in control
echo "debian/control:  copied base template" >&2
cp rules.in rules; chmod +x rules
echo "debian/rules:  copied base template" >&2
cp machinekit.install.in machinekit.install
echo "debian/machinekit.install.in:  copied base template" >&2

# read command line options
while getopts dprxR:X:t:?h ARG; do
    case $ARG in
	p) do_posix ;;
	r) do_rt-preempt ;;
	x) do_xenomai ;;
	R) do_rtai_kernel "$OPTARG" ;;
	X) do_xenomai_kernel "$OPTARG" ;;
	t) TCL_TK_VER="$OPTARG" ;;
	?|h) usage ;;
	*) usage "Unknown arg: '-$ARG'" ;;
    esac
done

# Determine tcl/tk version
do_tcl_tk_version "$TCL_TK_VER"

# Set kthreads headers
rules_set_kthreads_headers xenomai-kernel $XENOMAI_KERNEL_HEADERS
rules_set_kthreads_headers rtai-kernel $RTAI_KERNEL_HEADERS

# Kthreads need `kmod` for both build and runtime deps
if $HAVE_KTHREADS_FLAVOR; then
    BUILD_DEPS+='kmod, '
    DEPS+='kmod, '
    echo "usr/libexec/linuxcnc/linuxcnc_module_helper" >> \
	machinekit.install
fi

# Set control Build-Depends:
sed -i control \
    -e "s/@BUILD_DEPS@/${BUILD_DEPS}/" \
    -e "s/@DEPS@/${DEPS}/" \
    -e "s/@TCL_TK_BUILD_DEPS@/${TCL_TK_BUILD_DEPS}/" \
    -e "s/@TCL_TK_DEPS@/${TCL_TK_DEPS}/"
echo "debian/control:  add final Build-Depends: list" >&2

# Warn if no flavor configured
$HAVE_FLAVOR || usage "WARNING:  No thread flavors configured"
